name: E2E Tests
permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start PostgreSQL and Redis
        run: |
          docker compose -f docker-compose.e2e.yml up -d postgres redis
          echo "Waiting for database and cache to be ready..."
          sleep 10

      - name: Build and start backend service
        run: |
          docker compose -f docker-compose.e2e.yml up -d backend
          echo "Waiting for backend to be ready..."
          timeout 30 bash -c 'until docker compose -f docker-compose.e2e.yml exec -T backend wget --quiet --tries=1 -O /dev/null http://localhost:8080/health 2>/dev/null; do echo "Waiting for backend..."; sleep 1; done'
          echo "Backend is ready!"

      - name: Print backend logs on startup failure
        if: failure()
        run: |
          echo "Backend failed to start. Printing logs..."
          docker compose -f docker-compose.e2e.yml logs backend
          echo "Checking container status..."
          docker compose -f docker-compose.e2e.yml ps

      - name: Build and start frontend service
        run: |
          docker compose -f docker-compose.e2e.yml up -d frontend
          echo "Waiting for frontend to be ready..."
          timeout 20 bash -c 'until curl -s http://localhost:15180/health > /dev/null; do echo "Waiting for frontend..."; sleep 1; done'
          echo "Frontend is ready!"

      - name: Print frontend logs on startup failure
        if: failure()
        run: |
          echo "Frontend failed to start. Printing logs..."
          docker compose -f docker-compose.e2e.yml logs frontend
          echo "Checking container status..."
          docker compose -f docker-compose.e2e.yml ps

      - name: Run E2E tests
        run: |
          docker compose -f docker-compose.e2e.yml run --rm e2e-tests

      - name: Collect service logs
        if: always()
        run: |
          mkdir -p logs
          docker compose -f docker-compose.e2e.yml logs backend > logs/backend.log
          docker compose -f docker-compose.e2e.yml logs frontend > logs/frontend.log
          docker compose -f docker-compose.e2e.yml logs postgres > logs/postgres.log
          docker compose -f docker-compose.e2e.yml logs redis > logs/redis.log

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: packages/demo-fe/playwright-report/
          retention-days: 30

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: packages/demo-fe/test-results/
          retention-days: 7

      - name: Upload service logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: service-logs
          path: logs/
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          docker compose -f docker-compose.e2e.yml down -v

